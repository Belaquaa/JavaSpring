В Spring Framework, scope bean-а определяет жизненный цикл и видимость bean-а в контексте приложения. Вот основные
scope, которые можно назначить bean-ам в Spring:
 - Singleton (одиночка): Это scope по умолчанию в Spring. Бин с таким scope создается один раз на весь контекст
   приложения, и все запросы на получение bean-а будут возвращать один и тот же экземпляр. Это подходит для bean-ов
   без состояния или с глобальным состоянием.
 - Prototype (прототип): Каждый запрос на бин с этим scope приведет к созданию нового экземпляра bean-а. Это полезно,
   когда каждый компонент или клиент должен иметь свой собственный экземпляр bean-а. Для bean-ов со scope prototype
   Spring не вызывает метод destroy().
 - Request: Этот scope применим только в веб-приложениях. Бин с таким scope создается один раз для каждого
   HTTP-запроса. Каждый новый HTTP-запрос будет иметь свой собственный экземпляр bean-а, который не будет разделяться
   между другими запросами.
 - Session: Также применим только в веб-приложениях. Бин с таким scope создается один раз для каждой HTTP-сессии. Это
   позволяет сохранять данные на уровне сессии пользователя.
 - Application: Также применим только в веб-приложениях. Бин с этим scope создается один раз для всего жизненного цикла
   ServletContext. Это означает, что он общий для всех сессий в веб-приложении.
 - WebSocket: Также применим только в веб-приложениях. Бин с этим scope создается в одном экземпляре для определенного
   сеанса WebSocket.